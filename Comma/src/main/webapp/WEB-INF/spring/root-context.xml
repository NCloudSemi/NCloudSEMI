<?xml version="1.0" encoding="UTF-8"?>
<!-- 필요한 엘리먼트의 namespace를 추가하는 부분 -->
<!-- xmlns: 키워드 => 키워드로 엘리먼트를 생성한다.
     xsi:schemaLocation에서 namespace를 사용하기 위해서 xsd파일을 링크를 걸어줘야 한다 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- root-context.xml이 먼저 실행되기 때문에 Controller에 생성자 주입하려면 먼저 선언해야한다 -->
    <context:component-scan base-package="com.bit.springboard"/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/comma?serverTimezone=UTC"/>
        <property name="username" value="comma"/>
        <property name="password" value="!dkdlxl1234"/>
    </bean>

    <bean id="sessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:sql-map-config.xml"/>
    </bean>

    <!-- mybatis의 DB Connection Pool인 SessionFactory에서 DB Connection을 하나 씩
         꺼내서 사용할 SessionTemplate 객체 bean 등록-->
    <bean class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <!-- root-context.xml 또는 다른 Spring 설정 파일에 추가 -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
</beans>

        <!-- root-context.xml파일은 web.xml이 가장 먼저 읽어들이는 설정파일이다.
             web.xml의 ContextLoaderListener부분에 추가되는 설정 파일로 프로젝트 전반적으로 사용되는 자원을 생성하고 설정한다.
             DB 연결, 트랜잭션 처리, 파일 업로드 등을 작성한다.
             root-context.xml파일은 spring container를 생성하는 설정파일, Web Application에 대한 전박적인 내용을 설정하는 부모 컨테이너가 된다.
        -->